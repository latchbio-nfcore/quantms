
from dataclasses import dataclass
import typing
import typing_extensions

from flytekit.core.annotation import FlyteAnnotation

from latch.types.metadata import NextflowParameter
from latch.types.file import LatchFile
from latch.types.directory import LatchDir, LatchOutputDir

# Import these into your `__init__.py` file:
#
# from .parameters import generated_parameters

generated_parameters = {
    'input': NextflowParameter(
        type=LatchFile,
        default=None,
        section_title='Input/output options',
        description='URI/path to an [SDRF](https://github.com/bigbio/proteomics-metadata-standard/tree/master/annotated-projects) file (.sdrf.tsv) **OR** [OpenMS-style experimental design](https://abibuilder.cs.uni-tuebingen.de/archive/openms/Documentation/release/latest/html/classOpenMS_1_1ExperimentalDesign.html#details) with paths to spectra files (.tsv)',
    ),
    'outdir': NextflowParameter(
        type=typing_extensions.Annotated[LatchDir, FlyteAnnotation({'output': True})],
        default=None,
        section_title=None,
        description='The output directory where the results will be saved.',
    ),
    'email': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Email address for completion summary.',
    ),
    'multiqc_title': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='MultiQC report title. Printed as page header, used for filename if not otherwise specified.',
    ),
    'root_folder': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Root folder in which the spectrum files specified in the SDRF/design are searched',
    ),
    'local_input_type': NextflowParameter(
        type=typing.Optional[str],
        default='mzML',
        section_title=None,
        description='Overwrite the file type/extension of the filename as specified in the SDRF/design',
    ),
    'acquisition_method': NextflowParameter(
        type=typing.Optional[str],
        default='dda',
        section_title=None,
        description='Proteomics data acquisition method',
    ),
    'database': NextflowParameter(
        type=LatchFile,
        default=None,
        section_title='Protein database',
        description='The `fasta` protein database used during database search. *Note:* For DIA data, it must not contain decoys.',
    ),
    'add_decoys': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Generate and append decoys to the given protein database',
    ),
    'decoy_string': NextflowParameter(
        type=typing.Optional[str],
        default='DECOY_',
        section_title=None,
        description='Pre- or suffix of decoy proteins in their accession',
    ),
    'decoy_string_position': NextflowParameter(
        type=typing.Optional[str],
        default='prefix',
        section_title=None,
        description='Location of the decoy marker string in the `fasta` accession. Before (prefix) or after (suffix)',
    ),
    'decoy_method': NextflowParameter(
        type=typing.Optional[str],
        default='reverse',
        section_title=None,
        description='Choose the method to produce decoys from input target database.',
    ),
    'shuffle_max_attempts': NextflowParameter(
        type=typing.Optional[int],
        default=30,
        section_title=None,
        description='Maximum nr. of attempts to lower the amino acid sequence identity between target and decoy for the shuffle algorithm',
    ),
    'shuffle_sequence_identity_threshold': NextflowParameter(
        type=typing.Optional[float],
        default=0.5,
        section_title=None,
        description="Target-decoy amino acid sequence identity threshold for the shuffle algorithm. if the sequence identity is above this threshold, shuffling is repeated. In case of repeated failure, individual amino acids are 'mutated' to produce a difference amino acid sequence.",
    ),
    'openms_peakpicking': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Spectrum preprocessing',
        description='Activate OpenMS-internal peak picking',
    ),
    'peakpicking_inmemory': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Perform peakpicking in memory',
    ),
    'peakpicking_ms_levels': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Which MS levels to pick as comma separated list. Leave empty for auto-detection.',
    ),
    'convert_dotd': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Convert bruker .d files to mzML',
    ),
    'reindex_mzml': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Force initial re-indexing of input mzML files. Also fixes some common mistakes in slightly incomplete/outdated mzMLs. (Default: true for safety)',
    ),
    'search_engines': NextflowParameter(
        type=typing.Optional[str],
        default='comet',
        section_title='Database search',
        description='A comma separated list of search engines to use (and combine). Valid: comet, msgf, sage',
    ),
    'sage_processes': NextflowParameter(
        type=typing.Optional[int],
        default=1,
        section_title=None,
        description='Number of sage processes to be spawned.',
    ),
    'enzyme': NextflowParameter(
        type=typing.Optional[str],
        default='Trypsin',
        section_title=None,
        description="The enzyme to be used for in-silico digestion, in 'OpenMS format'",
    ),
    'num_enzyme_termini': NextflowParameter(
        type=typing.Optional[str],
        default='fully',
        section_title=None,
        description='Specify the amount of termini matching the enzyme cutting rules for a peptide to be considered. Valid values are `fully` (default), `semi`, or `none`',
    ),
    'allowed_missed_cleavages': NextflowParameter(
        type=typing.Optional[int],
        default=2,
        section_title=None,
        description='Specify the maximum number of allowed missed enzyme cleavages in a peptide. The parameter is not applied if `unspecific cleavage` is specified as enzyme.',
    ),
    'precursor_mass_tolerance': NextflowParameter(
        type=typing.Optional[int],
        default=5,
        section_title=None,
        description='Precursor mass tolerance used for database search. For High-Resolution instruments a precursor mass tolerance value of 5 ppm is recommended (i.e. 5). See also [`--precursor_mass_tolerance_unit`](#precursor_mass_tolerance_unit).',
    ),
    'precursor_mass_tolerance_unit': NextflowParameter(
        type=typing.Optional[str],
        default='ppm',
        section_title=None,
        description="Precursor mass tolerance unit used for database search. Possible values are 'ppm' (default) and 'Da'.",
    ),
    'fragment_mass_tolerance': NextflowParameter(
        type=typing.Optional[float],
        default=0.03,
        section_title=None,
        description='Fragment mass tolerance used for database search. The default of 0.03 Da is for high-resolution instruments.',
    ),
    'fragment_mass_tolerance_unit': NextflowParameter(
        type=typing.Optional[str],
        default='Da',
        section_title=None,
        description="Fragment mass tolerance unit used for database search. Possible values are 'ppm' (default) and 'Da'.",
    ),
    'fixed_mods': NextflowParameter(
        type=typing.Optional[str],
        default='Carbamidomethyl (C)',
        section_title=None,
        description='A comma-separated list of fixed modifications with their Unimod name to be searched during database search',
    ),
    'variable_mods': NextflowParameter(
        type=typing.Optional[str],
        default='Oxidation (M)',
        section_title=None,
        description='A comma-separated list of variable modifications with their Unimod name to be searched during database search',
    ),
    'isotope_error_range': NextflowParameter(
        type=typing.Optional[str],
        default='0,1',
        section_title=None,
        description="Comma-separated range of integers with allowed isotope peak errors for precursor tolerance (like MS-GF+ parameter '-ti'). E.g. -1,3",
    ),
    'instrument': NextflowParameter(
        type=typing.Optional[str],
        default='high_res',
        section_title=None,
        description="Type of instrument that generated the data. 'low_res' or 'high_res' (default; refers to LCQ and LTQ instruments)",
    ),
    'protocol': NextflowParameter(
        type=typing.Optional[str],
        default='automatic',
        section_title=None,
        description='MSGF only: Labeling or enrichment protocol used, if any. Default: automatic',
    ),
    'min_precursor_charge': NextflowParameter(
        type=typing.Optional[int],
        default=2,
        section_title=None,
        description="Minimum precursor ion charge. Omit the '+'",
    ),
    'max_precursor_charge': NextflowParameter(
        type=typing.Optional[int],
        default=4,
        section_title=None,
        description="Maximum precursor ion charge. Omit the '+'",
    ),
    'min_peptide_length': NextflowParameter(
        type=typing.Optional[int],
        default=6,
        section_title=None,
        description='Minimum peptide length to consider (works with MSGF and in newer Comet versions)',
    ),
    'max_peptide_length': NextflowParameter(
        type=typing.Optional[int],
        default=40,
        section_title=None,
        description='Maximum peptide length to consider (works with MSGF and in newer Comet versions)',
    ),
    'num_hits': NextflowParameter(
        type=typing.Optional[int],
        default=1,
        section_title=None,
        description='Specify the maximum number of top peptide candidates per spectrum to be reported by the search engine. Default: 1',
    ),
    'max_mods': NextflowParameter(
        type=typing.Optional[int],
        default=3,
        section_title=None,
        description='Maximum number of modifications per peptide. If this value is large, the search may take very long.',
    ),
    'min_pr_mz': NextflowParameter(
        type=typing.Optional[float],
        default=None,
        section_title=None,
        description='The minimum precursor m/z for the in silico library generation or library-free search',
    ),
    'max_pr_mz': NextflowParameter(
        type=typing.Optional[float],
        default=None,
        section_title=None,
        description='The maximum precursor m/z for the in silico library generation or library-free search',
    ),
    'min_fr_mz': NextflowParameter(
        type=typing.Optional[float],
        default=None,
        section_title=None,
        description='The minimum fragment m/z for the in silico library generation or library-free search',
    ),
    'max_fr_mz': NextflowParameter(
        type=typing.Optional[float],
        default=None,
        section_title=None,
        description='The maximum fragment m/z for the in silico library generation or library-free search',
    ),
    'enable_mod_localization': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Modification localization',
        description='Turn the mechanism on.',
    ),
    'mod_localization': NextflowParameter(
        type=typing.Optional[str],
        default='Phospho (S),Phospho (T),Phospho (Y)',
        section_title=None,
        description='Which variable modifications to use for scoring their localization.',
    ),
    'unmatched_action': NextflowParameter(
        type=typing.Optional[str],
        default='warn',
        section_title='Peptide re-indexing',
        description='What to do when peptides are found that do not follow a unified set of rules (since search engines sometimes differ in their interpretation of them). ',
    ),
    'IL_equivalent': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Should isoleucine and leucine be treated interchangeably when mapping search engine hits to the database? Default: true',
    ),
    'posterior_probabilities': NextflowParameter(
        type=typing.Optional[str],
        default='percolator',
        section_title='PSM re-scoring (general)',
        description="How to calculate posterior probabilities for PSMs:\n\n* 'percolator' = Re-score based on PSM-feature-based SVM and transform distance\n    to hyperplane for posteriors\n* 'fit_distributions' = Fit positive and negative distributions to scores\n    (similar to PeptideProphet)",
    ),
    'run_fdr_cutoff': NextflowParameter(
        type=typing.Optional[float],
        default=0.01,
        section_title=None,
        description='FDR cutoff on PSM level (or peptide level; see Percolator options) *per run* before going into feature finding, map alignment and inference. This can be seen as a pre-filter. See ',
    ),
    'FDR_level': NextflowParameter(
        type=typing.Optional[str],
        default='peptide-level-fdrs',
        section_title='PSM re-scoring (Percolator)',
        description="Calculate FDR on PSM ('psm-level-fdrs') or peptide level ('peptide-level-fdrs')?",
    ),
    'train_FDR': NextflowParameter(
        type=typing.Optional[float],
        default=0.05,
        section_title=None,
        description='The FDR cutoff to be used during training of the SVM.',
    ),
    'test_FDR': NextflowParameter(
        type=typing.Optional[float],
        default=0.05,
        section_title=None,
        description='The FDR cutoff to be used during testing of the SVM.',
    ),
    'subset_max_train': NextflowParameter(
        type=typing.Optional[int],
        default=300000,
        section_title=None,
        description='Only train an SVM on a subset of PSMs, and use the resulting score vector to evaluate the other PSMs. Recommended when analyzing huge numbers (>1 million) of PSMs. When set to 0, all PSMs are used for training as normal. This is a runtime vs. quality tradeoff. Default: 300,000',
    ),
    'description_correct_features': NextflowParameter(
        type=typing.Optional[int],
        default=None,
        section_title=None,
        description='Use additional features whose values are learnt by correct entries. See help text. Default: 0 = none',
    ),
    'outlier_handling': NextflowParameter(
        type=typing.Optional[str],
        default='none',
        section_title='PSM re-scoring (distribution fitting)',
        description='How to handle outliers during fitting:\n\n* ignore_iqr_outliers (default): ignore outliers outside of `3*IQR` from Q1/Q3 for fitting\n* set_iqr_to_closest_valid: set IQR-based outliers to the last valid value for fitting\n* ignore_extreme_percentiles: ignore everything outside 99th and 1st percentile (also removes equal values like potential censored max values in XTandem)\n* none: do nothing',
    ),
    'consensusid_algorithm': NextflowParameter(
        type=typing.Optional[str],
        default='best',
        section_title='Consensus ID',
        description='How to combine the probabilities from the single search engines: best, combine using a sequence similarity-matrix (PEPMatrix), combine using shared ion count of peptides (PEPIons). See help for further info.',
    ),
    'consensusid_considered_top_hits': NextflowParameter(
        type=typing.Optional[int],
        default=None,
        section_title=None,
        description='Only use the top N hits per search engine and spectrum for combination. Default: 0 = all',
    ),
    'min_consensus_support': NextflowParameter(
        type=typing.Optional[float],
        default=None,
        section_title=None,
        description='A threshold for the ratio of occurrence/similarity scores of a peptide in other runs, to be reported. See help.',
    ),
    'select_activation': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title='Isobaric analyzer',
        description='Operate only on MSn scans where any of its precursors features a certain activation method. Set to empty to disable.',
    ),
    'reporter_mass_shift': NextflowParameter(
        type=typing.Optional[float],
        default=0.002,
        section_title=None,
        description='Allowed shift (left to right) in Th from the expected position',
    ),
    'min_precursor_intensity': NextflowParameter(
        type=typing.Optional[float],
        default=1.0,
        section_title=None,
        description='Minimum intensity of the precursor to be extracted',
    ),
    'min_precursor_purity': NextflowParameter(
        type=typing.Optional[float],
        default=0.0,
        section_title=None,
        description='Minimum fraction of the total intensity. 0.0:1.0',
    ),
    'min_reporter_intensity': NextflowParameter(
        type=typing.Optional[float],
        default=0.0,
        section_title=None,
        description='Minimum intensity of the individual reporter ions to be extracted.',
    ),
    'precursor_isotope_deviation': NextflowParameter(
        type=typing.Optional[float],
        default=10.0,
        section_title=None,
        description='Maximum allowed deviation (in ppm) between theoretical and observed isotopic peaks of the precursor peak',
    ),
    'isotope_correction': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Enable isotope correction (highly recommended)',
    ),
    'iso_normalization': NextflowParameter(
        type=typing.Optional[bool],
        default=False,
        section_title=None,
        description='Enable normalization of the channel intensities',
    ),
    'reference_channel': NextflowParameter(
        type=typing.Optional[int],
        default=126,
        section_title=None,
        description='The reference channel, e.g. for calculating ratios.',
    ),
    'protein_inference_method': NextflowParameter(
        type=typing.Optional[str],
        default='aggregation',
        section_title='Protein inference',
        description="The inference method to use. 'aggregation' (default) or 'bayesian'.",
    ),
    'protein_score': NextflowParameter(
        type=typing.Optional[str],
        default='best',
        section_title=None,
        description='[Ignored in Bayesian] How to aggregate scores of peptides matching to the same protein',
    ),
    'use_shared_peptides': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='[Ignored in Bayesian] Also use shared peptides during score aggregation to protein level',
    ),
    'min_peptides_per_protein': NextflowParameter(
        type=typing.Optional[int],
        default=1,
        section_title=None,
        description='[Ignored in Bayesian] Minimum number of peptides needed for a protein identification',
    ),
    'top_PSMs': NextflowParameter(
        type=typing.Optional[int],
        default=1,
        section_title=None,
        description='Consider only the top X PSMs per spectrum to find the best PSM per peptide. 0 considers all.',
    ),
    'protein_level_fdr_cutoff': NextflowParameter(
        type=typing.Optional[float],
        default=0.01,
        section_title=None,
        description='The experiment-wide protein (group)-level FDR cutoff. Default: 0.01',
    ),
    'picked_fdr': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Use picked protein FDRs',
    ),
    'psm_level_fdr_cutoff': NextflowParameter(
        type=typing.Optional[float],
        default=0.01,
        section_title=None,
        description='The experiment-wide PSM-level FDR cutoff. Default: 0.01',
    ),
    'labelling_type': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title='Protein Quantification (DDA)',
        description='Specify the labelling method that was used. Will be ignored if SDRF was given but is mandatory otherwise',
    ),
    'top': NextflowParameter(
        type=typing.Optional[int],
        default=3,
        section_title=None,
        description="Calculate protein abundance from this number of proteotypic peptides (most abundant first; '0' for all, Default 3)",
    ),
    'average': NextflowParameter(
        type=typing.Optional[str],
        default='median',
        section_title=None,
        description='Averaging method used to compute protein abundances from peptide abundances.',
    ),
    'best_charge_and_fraction': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description="Distinguish between fraction and charge states of a peptide. (default: 'false')",
    ),
    'ratios': NextflowParameter(
        type=typing.Optional[bool],
        default='false',
        section_title=None,
        description='Add the log2 ratios of the abundance values to the output.',
    ),
    'normalize': NextflowParameter(
        type=typing.Optional[bool],
        default='false',
        section_title=None,
        description='Scale peptide abundances so that medians of all samples are equal.(Default false)',
    ),
    'fix_peptides': NextflowParameter(
        type=typing.Optional[bool],
        default='false',
        section_title=None,
        description='Use the same peptides for protein quantification across all samples.(Default false)',
    ),
    'include_all': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Include results for proteins with fewer proteotypic peptide than indicated by top.',
    ),
    'protein_quant': NextflowParameter(
        type=typing.Optional[str],
        default='unique_peptides',
        section_title=None,
        description="Quantify proteins based on:\n\n* 'unique_peptides' = use peptides mapping to single proteins or a group of indistinguishable proteins (according to the set of experimentally identified peptides)\n* 'strictly_unique_peptides' (only LFQ) = use peptides mapping to a unique single protein only\n* 'shared_peptides' = use shared peptides, too, but only greedily for its best group (by inference score and nr. of peptides)",
    ),
    'export_mztab': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Export the results in mzTab format.',
    ),
    'quantification_method': NextflowParameter(
        type=typing.Optional[str],
        default='feature_intensity',
        section_title='Protein Quantification (LFQ)',
        description="Choose between feature-based quantification based on integrated MS1 signals ('feature_intensity'; default) or spectral counting of PSMs ('spectral_counting'). **WARNING:** 'spectral_counting' is not compatible with our MSstats step yet. MSstats will therefore be disabled automatically with that choice.",
    ),
    'mass_recalibration': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description="Recalibrates masses based on precursor mass deviations to correct for instrument biases. (default: 'false')",
    ),
    'targeted_only': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description="Only looks for quantifiable features at locations with an identified spectrum. Set to false to include unidentified features so they can be linked and matched to identified ones (= match between runs). (default: 'true')",
    ),
    'feature_with_id_min_score': NextflowParameter(
        type=typing.Optional[float],
        default=0.0,
        section_title=None,
        description='The minimum probability (e.g.: 0.25) an identified (=id targeted) feature must have to be kept for alignment and linking (0=no filter).',
    ),
    'feature_without_id_min_score': NextflowParameter(
        type=typing.Optional[float],
        default=0.0,
        section_title=None,
        description='The minimum probability (e.g.: 0.75) an unidentified feature must have to be kept for alignment and linking (0=no filter).',
    ),
    'lfq_intensity_threshold': NextflowParameter(
        type=typing.Optional[float],
        default=10000,
        section_title=None,
        description="The minimum intensity for a feature to be considered for quantification. (default: '10000')",
    ),
    'alignment_order': NextflowParameter(
        type=typing.Optional[str],
        default='star',
        section_title=None,
        description='The order in which maps are aligned. Star = all vs. the reference with most IDs (default). TreeGuided = an alignment tree is calculated first based on similarity measures of the IDs in the maps.',
    ),
    'quantify_decoys': NextflowParameter(
        type=typing.Optional[bool],
        default=False,
        section_title=None,
        description='Also quantify decoys? (Usually only needed for Triqler post-processing output with [`--add_triqler_output`](#add_triqler_output), where it is auto-enabled)',
    ),
    'mass_acc_automatic': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title='DIA-NN',
        description='Choosing the MS2 mass accuracy setting automatically',
    ),
    'scan_window_automatic': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Choosing scan_window setting automatically',
    ),
    'scan_window': NextflowParameter(
        type=typing.Optional[int],
        default=7,
        section_title=None,
        description='Set the scan window radius to a specific value',
    ),
    'min_corr': NextflowParameter(
        type=typing.Optional[float],
        default=2.0,
        section_title=None,
        description='Only peaks with correlation sum exceeding min_corr will be considered',
    ),
    'corr_diff': NextflowParameter(
        type=typing.Optional[float],
        default=1.0,
        section_title=None,
        description='Peaks with correlation sum below corr_diff from maximum will not be considered',
    ),
    'time_corr_only': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='A single score will be used until RT alignment to save memory',
    ),
    'pg_level': NextflowParameter(
        type=typing.Optional[float],
        default=2,
        section_title=None,
        description='Controls the protein inference mode',
    ),
    'species_genes': NextflowParameter(
        type=typing.Optional[bool],
        default=False,
        section_title=None,
        description='Instructs DIA-NN to add the organism identifier to the gene names',
    ),
    'diann_speclib': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='The spectral library to use for DIA-NN',
    ),
    'diann_normalize': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Enable cross-run normalization between runs by diann.',
    ),
    'skip_post_msstats': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Statistical post-processing',
        description='Skip MSstats/MSstatsTMT for statistical post-processing?',
    ),
    'ref_condition': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Experimental: Instead of all pairwise contrasts (default), uses the given condition name/number (corresponding to your experimental design) as a reference and creates pairwise contrasts against it.',
    ),
    'contrasts': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Experimental: Allows full control over contrasts by specifying a set of contrasts in a semicolon separated list of R-compatible contrasts with the condition names/numbers as variables (e.g. `1-2;1-3;2-3`). Overwrites [`--ref_condition`](#ref_condition).',
    ),
    'msstats_threshold': NextflowParameter(
        type=typing.Optional[float],
        default=0.05,
        section_title=None,
        description='The threshold value for differential expressed proteins in MSstats plots based on adjusted p-value',
    ),
    'add_triqler_output': NextflowParameter(
        type=typing.Optional[bool],
        default=False,
        section_title=None,
        description="Also create an output in Triqler's format for an alternative manual post-processing with that tool",
    ),
    'msstatslfq_feature_subset_protein': NextflowParameter(
        type=typing.Optional[str],
        default='top3',
        section_title=None,
        description="Which features to use for quantification per protein: 'top3' or 'highQuality' which removes outliers only",
    ),
    'msstatslfq_quant_summary_method': NextflowParameter(
        type=typing.Optional[str],
        default='TMP',
        section_title=None,
        description="which summary method to use: 'TMP' (Tukey's median polish) or 'linear' (linear mixed model)",
    ),
    'msstats_remove_one_feat_prot': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Omit proteins with only one quantified feature?',
    ),
    'msstatslfq_removeFewMeasurements': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Keep features with only one or two measurements across runs?',
    ),
    'msstatsiso_useunique_peptide': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Use unique peptide for each protein',
    ),
    'msstatsiso_rmpsm_withfewmea_withinrun': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Remove the features that have 1 or 2 measurements within each run',
    ),
    'msstatsiso_summaryformultiple_psm': NextflowParameter(
        type=typing.Optional[str],
        default='sum',
        section_title=None,
        description='select the feature with the largest summmation or maximal value',
    ),
    'msstatsiso_summarization_method': NextflowParameter(
        type=typing.Optional[str],
        default='msstats',
        section_title=None,
        description='summarization methods to protein-level can be perfomed',
    ),
    'msstatsiso_global_norm': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Reference channel based normalization between MS runs on protein level data?',
    ),
    'msstatsiso_remove_norm_channel': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description="Remove 'Norm' channels from protein level data",
    ),
    'msstatsiso_reference_normalization': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Reference channel based normalization between MS runs on protein level data',
    ),
    'msstats_plot_profile_qc': NextflowParameter(
        type=typing.Optional[bool],
        default=False,
        section_title=None,
        description='Export MSstats profile QC plots including all proteins',
    ),
    'enable_pmultiqc': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Quality control',
        description="Enable generation of pmultiqc report? default: 'false'",
    ),
    'pmultiqc_idxml_skip': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description="Skip idXML files (do not generate search engine scores) in pmultiqc report? default: 'true'",
    ),
    'skip_table_plots': NextflowParameter(
        type=typing.Optional[bool],
        default=False,
        section_title='Generic options',
        description='Skip protein/peptide table plots with pmultiqc for large dataset.',
    ),
    'multiqc_methods_description': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Custom MultiQC yaml file containing HTML including a methods description.',
    ),
}

